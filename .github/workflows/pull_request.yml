name: pull request
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  pull_request:
    branches:
      - 'main'
jobs:
  comment:
    runs-on: ubuntu-latest
    if: "(github.event.pull_request.body == null)"
    steps:
      - uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Please change PR Title!!'
            })

  build:
    name: Android build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

  DebugApk:
    name: Debug App
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'DebugApp')
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew assembleDebug
      - name: Upload debug apk
        uses: actions/upload-artifact@v3
        with:
          name: DebugApk
          path: app/build/outputs/apk/debug/app-debug.apk


  Unit-test:
    name: Junit test
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'JunitTc')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Run unit tests
        run: ./gradlew test

      - name: Upload coverage report directory
        uses: actions/upload-artifact@v3
        with:
          name: CoverageReport
          path: app/build/reports/coverage/jacocoDebugCombinedTestReport/

      - name: Upload test report directory
        uses: actions/upload-artifact@v3
        with:
          name: UnitTest
          path: app/build/reports/tests/testDebugUnitTest/
#name: pull request
#
#on:
#  pull_request:
#    branches:
#      - 'main'
#
#jobs:
#  build:
#    name: Android build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: gradle
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Build with Gradle
#        run: ./gradlew build
#
#  test:
#    name: test, coverage
#  # Run on macOS, as currently it is the only runner with hardware acceleration (HAXM) installed
#    runs-on: macOS-latest
#    strategy:
#    matrix:
## System Image for API 30 not yet available through the
## reactivecircus/android-emulator-runner Action, apparently
#    api-level: [ 29 ]
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v2
#        with:
#          distribution: 'temurin'
#          java-version: '11'
#          cache: 'gradle'
#          # Emulator preparation - AVD snapshot caching
#      - name: AVD cache
#        uses: actions/cache@v2
#        id: avd-cache
#        with:
#           path: |
#                ~/.android/avd/*
#                ~/.android/adb*
#              key: avd-${{ matrix.api-level }}
#      - name: create AVD and generate snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: false
#          script: echo "Generated AVD snapshot for caching."
#      # Test and coverage
#      - name: Android tests (unit and instrumented)
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: true
#      # Runs: Build, unit tests, instrumented tests, then combines coverage reports
#          script: ./gradlew jacocoDebugCombinedTestReport
#      - name: Upload coverage to Code-Climate
#        uses: paambaati/codeclimate-action@v2.7.5
#        env:
#          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
#          JACOCO_SOURCE_PATH: "${{github.workspace}}/app/src/main/java"
#        with:
#          coverageLocations: ${{github.workspace}}/app/build/reports/coverage/jacocoDebugCombinedTestReport/jacocoDebugCombinedTestReport.xml:jacoco
#                # Artifacts
#      - name: Upload coverage report directory
#        uses: actions/upload-artifact@v2
#        with:
#          name: CoverageReport
#          path: app/build/reports/coverage/jacocoDebugCombinedTestReport/
#      - name: Upload test report directory
#        uses: actions/upload-artifact@v2
#        with:
#          name: UnitTest
#          path: app/build/reports/tests/testDebugUnitTest/
